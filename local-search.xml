<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JS基础知识学习笔记</title>
    <link href="/2025/02/27/learnJS/"/>
    <url>/2025/02/27/learnJS/</url>
    
    <content type="html"><![CDATA[<h3 id="解释型语言"><a href="#解释型语言" class="headerlink" title="解释型语言:"></a>解释型语言:</h3><p><code>javascript</code>，<code>php</code>，<code>python</code>  </p><p>JS诞生于1995年，网景公司员工蓝登艾奇发明，最初叫livescript，为了曾java热度，改名为javascript。</p><p>Js是世界上使用的最多的<strong>脚本语言</strong>,特点:<strong>单线程</strong></p><p>2011年 node.js诞生，使js能开发服务器端程序。  </p><h3 id="javascript的组成："><a href="#javascript的组成：" class="headerlink" title="javascript的组成："></a>javascript的组成：</h3><ol><li>ECMAScript js的语法标准，包括变量，表达式，运算符，函数，if，for语句</li><li>DOM document objiect model 文档对象模型，JS操作页面元素的api</li><li>BOM 浏览器对象模型</li></ol><p>ECMAScript不是一门语言，而是一个标准。规定了JS的编程语法和基础核心知识，所有浏览器厂商需要共同遵守的一套js语法工业标准。  </p><p>2015年发布了ECMAScript6版本。语言能力更强，包含很多新特性，但要考虑浏览器的兼容性问题。  </p><p>浏览器默认从上至下解析网页，我们将js代码卸载body标签内，而不是head标签中，因为这样的js是无效的，标签元素在此时还没来得及加载，自然也无法操作元素。  </p><p>JS严格区分大小写。  </p><p>常量 <code>const</code><br>变量 <code>let</code><br>ES6之前 变量叫var，弱类型语言<br><code>静态数据</code>：以文件的形式存储在硬盘上，比如文档，照片，视频等，永久性数据<br><code>动态数据</code>： 内存中的数据，访问速度快</p><h3 id="JS有8种数据类型"><a href="#JS有8种数据类型" class="headerlink" title="JS有8种数据类型"></a>JS有8种数据类型</h3><p>基本数据类型 <code>String</code>，<code>Number</code>,<code>Biging</code>,<code>Boolean</code>,<code>Null</code>,<code>undefined</code>,<code>Symbol</code><br>引用数据类型 <code>Object</code><br>内置对象 <code>Function</code>，<code>Array</code>，<code>Date</code>，<code>Regexp</code>，<code>Error</code>等都属于<code>Object</code>类型  </p><p>数据类型之间最大的区别：<br>基本数据类型，参数赋值的时候传数值<br>引用数据类型，参数赋值的时候传地址</p><p>比较字符串大小时，是一位一位进行比较，顺序从左到右。如果一样大，则比较下一位。<br>“56”  &gt; “123”<br>因此，比较两个字符串数字时，要先转换类型</p><p><code>==</code>符号会做隐士转换，将不同类型的数据类型，先转为相同类型再比较。<br><code>===</code>不仅判断值相等，还要判断类型相同</p><h3 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h3><ul><li>形参与实参的个数可以不同，调用函数时，解析器不糊检查实参的数量。  </li><li>如果实参个数&gt;形参个数，则末尾的实参是多余的，不会被赋值，因为没有形参接收。   </li><li>如果实参个数&lt;形参个数，则末尾的形参是多余的，值是undefined  </li><li>函数中不写return，也会返回undefined</li><li>如果一个函数作为一个对象的属性保存，那么这个函数称为这个对象的方法。</li><li>函数内的arguments是一个类数组对象，里面存储了接收到的实参列表。</li></ul><h3 id="递归函数："><a href="#递归函数：" class="headerlink" title="递归函数："></a>递归函数：</h3><p> 一个函数内部调用这个函数自身。</p><h3 id="作用域："><a href="#作用域：" class="headerlink" title="作用域："></a>作用域：</h3><p>全局作用域是直接编写在script标签中的js代码，在页面打开时创建，在页面关闭时销毁。<br>全局作用域中有一个全局的<code>window</code>对象，他代表浏览器窗户，由浏览器创建，我们可以直接使用。<br>创建的变量都会作为window的对象属性保存。比如在全局作用域写  const a &#x3D; 100； 这里的a等价于<code>window.a</code>;<br>创建的函数会作为window对象方法保存。</p><h3 id="作用域的关系："><a href="#作用域的关系：" class="headerlink" title="作用域的关系："></a>作用域的关系：</h3><p>内部作用域可以访问外部作用域变量，外部不能访问内部。<br>无论是在函数内，还是函数外，如果变量未经声明就赋值（意思是不加 var、let，const），这个变量是全局变量。<br>任何变量，如果未经声明就赋值，此变量是属于window的属性。<br>函数内部可以访问全局变量和局部变量<br>函数外部只能访问全局变量<br>当函数执行完毕后，本作用域的的局部变量会销毁。</p><h3 id="闭包的表现形式："><a href="#闭包的表现形式：" class="headerlink" title="闭包的表现形式："></a>闭包的表现形式：</h3><ol><li>将一个函数作为另一个函数的返回值；</li><li>将函数作为实参传递给另一个函数调用</li></ol><h3 id="闭包的作用"><a href="#闭包的作用" class="headerlink" title="闭包的作用:"></a>闭包的作用:</h3><ol><li>延长局部变量的声明周期。</li><li>让函数外部可以操作函数内部的数据</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇博客---懂人情，知冷暖。</title>
    <link href="/2025/02/27/first-blog/"/>
    <url>/2025/02/27/first-blog/</url>
    
    <content type="html"><![CDATA[<p>转眼人生已过32载，马上步入中年了，诚惶诚恐。过去这一年多来，家中发生了很多变故，内心从未如此焦虑。  </p><p>或许一切都是因买房而起吧，一套不足百平米的房子，给我的家庭带来了巨额的债务，近几年的生活都过的紧巴巴的。而今面临经济大环境的寒气，公司的业绩也持续下滑，面临裁员降薪的风险。而我在此刻，还背负着为我的岳父以我的名义贷了近一百万的贷款，我不知道一个普通人在如此境况下该有怎样的心境,而他，还赔的精光。如此，该怎样去面对，如何去承受？我不知道!我只能对自己说，面对吧，总有人你比更惨，除了正常渡过每一天，我还能怎样呢？  </p><div class="note note-info">            <p><strong>——淡然处之</strong>。    </p>          </div><p>失眠，至少在30岁之前我的人生词典根本就不存在。现在经常彻夜难眠。每天睁开眼睛，想的就是怎样赚钱，怎样搞副业，怎样暴富。作为一个从业10年的程序员，我的性格又是那么谨小慎微，没有冒风险的精神。压抑的很！甚至开始反思，婚姻给我带来了什么。以前常有朋友调侃:”人生赢家啊,有车有房有老婆孩子!” 到现在我深深的体会到,拥有这些东西的背后,是多么沉重的责任，到今天都已经压得我快要窒息。今年春节期间，对未婚的朋友说，我真羡慕你未婚。他不理解我羡慕他什么。他比我年纪还大一岁，肯定也很焦虑，但我们的焦虑无法共鸣。我不想把焦虑的情绪带给家人，朋友。越是经历情绪的低谷，越是<strong>懂人情，知冷暖</strong>。我想给身边人展示一个积极乐观的自我，奋斗向上的自我😄。  </p><p>回头望，全是负能量。  </p><p>最近互联网上流传一句话——“债务不是手段，而是目的。”是的，这个社会机器滚滚向前，为了不让我躺平，给我设置了巨额的债务关卡。但我要改变自己，想办法去突破，提升自己！ </p><p><strong>我不知道写这个博客是否有人会看。我打算把日常一些所见所感记录下来，也规划一下自己，只当是给自己的碎片记录整理，或者心灵的倾诉吧！</strong>  </p><h2 id="这开篇，就先给自己立下3个flag"><a href="#这开篇，就先给自己立下3个flag" class="headerlink" title="这开篇，就先给自己立下3个flag:"></a>这开篇，就先给自己立下3个flag:</h2><div class="note note-info">            <p><strong>1. 减肥到155斤；</strong>  </p><p><strong>2. 掌握JS以及相关领域的常用框架；</strong>  </p><p><strong>3. 年底不要被迫卖房。</strong></p>          </div>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-9d96e2bb" role="button" aria-expanded="false" aria-controls="collapse-9d96e2bb">        <div class="fold-arrow">▶</div>文章封面      </div>      <div class="fold-collapse collapse" id="collapse-9d96e2bb">        <div class="fold-content">          <p><img src="/img/first.png"></p>        </div>      </div>    </div>]]></content>
    
    
    
    <tags>
      
      <tag>心情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/25/hello-world/"/>
    <url>/2025/02/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
